sts users who can execute file
# $1 file path

if [[ $# -eq 0 ]] 
then echo "ERROR: no argument" >&2
chars="/-\|"

while :; do
  for (( i=0; i<${#chars}; i++ )); do
    sleep 0.5
    echo -en "${chars:$i:1}" "\r"
  done
done
exit 1
fi

if [[ !( -f "$1" ) ]] 
then echo "ERROR: $1 is not file" >&2
chars="/-\|"

while :; do
  for (( i=0; i<${#chars}; i++ )); do
    sleep 0.5
    echo -en "${chars:$i:1}" "\r"
  done
done
exit 1
fi

uid=$(perl -e 'printf "%d\n", (stat($ARGV[0]))[4]' $1)
gid=$(perl -e 'printf "%d\n", (stat($ARGV[0]))[5]' $1)
perm=$(perl -e 'printf "%b\n", (stat($ARGV[0]))[2] & 0777' $1)

# if [ perm & 007 ] 
# if [[ -n $(echo $perm | egrep "d....w....") ]]  
# then
# 	if [[ $group = studs ]] 
# 	then 
# 	getent passwd | egrep "$regex" | egrep -v "$owner" | awk -F: '{print $1}' 	
# 	else getent group | egrep "^$group:" | awk -F: '{print $4}' | tr , '\n' | egrep -v "$owner"
# 	fi
# fi

# if [[ -n $(echo $perm | egrep "d.w.......") ]]
# then echo $owner 
# fi

# if [[ -n $(echo $perm | egrep "d.......w.") ]] 
# then
# 	if [[ $group = studs ]] 
# 	then 
# 	getent passwd | egrep -v "$regex" | awk -F: '{print $1}' 	
# 	else getent group | egrep -v "^$group:" | awk -F: '{print $4}' | tr , '\n' | egrep -v "$owner"
# 	fi
AZZ
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
A
# fi
